// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sistemaDual.Data;

#nullable disable

namespace sistemaDual.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220919073226_AddTablesDb2")]
    partial class AddTablesDb2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.7.22376.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("sistemaDual.Models.Alumno", b =>
                {
                    b.Property<string>("CURP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BecaDualCLAVE")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CLAVE_BECA1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CLAVE_ESTATUS1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Domicilioid")
                        .HasColumnType("int");

                    b.Property<string>("EstatusCLAVE")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("apellido_m")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apellido_p")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contrasenia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cuatrimentre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_contratado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_egreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_ingreso_dual")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_ingreso_reingreso")
                        .HasColumnType("datetime2");

                    b.Property<string>("fecha_nac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_registro")
                        .HasColumnType("datetime2");

                    b.Property<string>("genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_domicilio1")
                        .HasColumnType("int");

                    b.Property<int>("matricula")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("promedio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("telefono")
                        .HasColumnType("int");

                    b.Property<string>("tipo_alumno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CURP");

                    b.HasIndex("BecaDualCLAVE");

                    b.HasIndex("Domicilioid");

                    b.HasIndex("EstatusCLAVE");

                    b.ToTable("Alumnos");
                });

            modelBuilder.Entity("sistemaDual.Models.Alumno_Asignatura", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("AlumnoCURP")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AsignaturaCLAVE")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CLAVE_ASIGNATURA1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CURP_ALUMNO3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("AlumnoCURP");

                    b.HasIndex("AsignaturaCLAVE");

                    b.ToTable("Alumno_Asignaturas");
                });

            modelBuilder.Entity("sistemaDual.Models.Alumno_MentorEmpresarial", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("AlumnoCURP")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CURP_ALUMNO1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CURP_MENTOR_E1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MentorEmpresarialCURP")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("AlumnoCURP");

                    b.HasIndex("MentorEmpresarialCURP");

                    b.ToTable("Alumno_MentorEmpresarials");
                });

            modelBuilder.Entity("sistemaDual.Models.Alumno_ProgramaEducativo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("AlumnoCURP")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CLAVE_PROGRAMA6")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CURP_ALUMNO7")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramaEducativoCLAVE")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("AlumnoCURP");

                    b.HasIndex("ProgramaEducativoCLAVE");

                    b.ToTable("Alumno_ProgramaEducativos");
                });

            modelBuilder.Entity("sistemaDual.Models.AsesorInstitucional", b =>
                {
                    b.Property<string>("CURP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CLAVE_PROGRAMA3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramaEducativoCLAVE")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("apellido_m")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apellido_p")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CURP");

                    b.HasIndex("ProgramaEducativoCLAVE");

                    b.ToTable("AsesorInstitucionals");
                });

            modelBuilder.Entity("sistemaDual.Models.Asignatura", b =>
                {
                    b.Property<string>("CLAVE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CLAVE_PROGRAMA6")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramaEducativoCLAVE")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("actividad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("competencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("periodo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CLAVE");

                    b.HasIndex("ProgramaEducativoCLAVE");

                    b.ToTable("Asignaturas");
                });

            modelBuilder.Entity("sistemaDual.Models.BecaDual", b =>
                {
                    b.Property<string>("CLAVE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("duracion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fuente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("periocidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo_beca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CLAVE");

                    b.ToTable("BecaDuals");
                });

            modelBuilder.Entity("sistemaDual.Models.CatalagoProyecto", b =>
                {
                    b.Property<string>("CLAVE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlumnoCURP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AsesorInstitucionalCURP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CLAVE_PROGRAMA1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CURP_ALUMNO2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CURP_ASESOR_I")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CURP_MENTOR_E2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CURP_RESPONSABLE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpresaRFC")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MentorEmpresarialCURP")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProgramaEducativoCLAVE")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RFC_EMPRESA2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsableInstitucionalCURP")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("area_conocimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("etapa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("num_hora_dual")
                        .HasColumnType("int");

                    b.HasKey("CLAVE");

                    b.HasIndex("AlumnoCURP");

                    b.HasIndex("AsesorInstitucionalCURP");

                    b.HasIndex("EmpresaRFC");

                    b.HasIndex("MentorEmpresarialCURP");

                    b.HasIndex("ProgramaEducativoCLAVE");

                    b.HasIndex("ResponsableInstitucionalCURP");

                    b.ToTable("CatalagoProyectos");
                });

            modelBuilder.Entity("sistemaDual.Models.Domicilio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("CP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("colonia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("localidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("municipio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("otros")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Domicilios");
                });

            modelBuilder.Entity("sistemaDual.Models.Empresa", b =>
                {
                    b.Property<string>("RFC")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Domicilioid")
                        .HasColumnType("int");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("id_domicilio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_domicilio3")
                        .HasColumnType("int");

                    b.Property<string>("nombre_comercial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("razon_social")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("representante_legal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sector")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RFC");

                    b.HasIndex("Domicilioid");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("sistemaDual.Models.Estatus", b =>
                {
                    b.Property<string>("CLAVE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("activo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("baja_definitiva_ies")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("baja_definitiva_med")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("baja_temporal_ies")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("baja_temporal_med")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cambio_empresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("egresado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CLAVE");

                    b.ToTable("Estatus");
                });

            modelBuilder.Entity("sistemaDual.Models.MentorAcademico", b =>
                {
                    b.Property<string>("CURP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CLAVE_PROGRAMA4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramaEducativoCLAVE")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("apellido_m")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apellido_p")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CURP");

                    b.HasIndex("ProgramaEducativoCLAVE");

                    b.ToTable("MentorAcademicos");
                });

            modelBuilder.Entity("sistemaDual.Models.MentorEmpresarial", b =>
                {
                    b.Property<string>("CURP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CLAVE_PROGRAMA5")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpresaRFC")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProgramaEducativoCLAVE")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RFC_EMPRESA1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apellido_m")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apellido_p")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contrasenia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("telefono")
                        .HasColumnType("int");

                    b.HasKey("CURP");

                    b.HasIndex("EmpresaRFC");

                    b.HasIndex("ProgramaEducativoCLAVE");

                    b.ToTable("MentorEmpresarials");
                });

            modelBuilder.Entity("sistemaDual.Models.ProgramaEducativo", b =>
                {
                    b.Property<string>("CLAVE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CCT3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniversidadCCT")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CLAVE");

                    b.HasIndex("UniversidadCCT");

                    b.ToTable("ProgramaEducativos");
                });

            modelBuilder.Entity("sistemaDual.Models.ResponsableInstitucional", b =>
                {
                    b.Property<string>("CURP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CCT5")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniversidadCCT")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("apellido_m")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apellido_p")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("telefono")
                        .HasColumnType("int");

                    b.HasKey("CURP");

                    b.HasIndex("UniversidadCCT");

                    b.ToTable("ResponsableInstitucionals");
                });

            modelBuilder.Entity("sistemaDual.Models.Universidad", b =>
                {
                    b.Property<string>("CCT")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Domicilioid")
                        .HasColumnType("int");

                    b.Property<int>("id_domicilio2")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CCT");

                    b.HasIndex("Domicilioid");

                    b.ToTable("Universidades");
                });

            modelBuilder.Entity("sistemaDual.Models.Alumno", b =>
                {
                    b.HasOne("sistemaDual.Models.BecaDual", "BecaDual")
                        .WithMany("Alumnos")
                        .HasForeignKey("BecaDualCLAVE")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sistemaDual.Models.Domicilio", "Domicilio")
                        .WithMany("Alumnos")
                        .HasForeignKey("Domicilioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sistemaDual.Models.Estatus", "Estatus")
                        .WithMany("Alumnos")
                        .HasForeignKey("EstatusCLAVE")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BecaDual");

                    b.Navigation("Domicilio");

                    b.Navigation("Estatus");
                });

            modelBuilder.Entity("sistemaDual.Models.Alumno_Asignatura", b =>
                {
                    b.HasOne("sistemaDual.Models.Alumno", "Alumno")
                        .WithMany("Alumno_Asignaturas")
                        .HasForeignKey("AlumnoCURP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sistemaDual.Models.Asignatura", "Asignatura")
                        .WithMany("Alumno_Asignaturas")
                        .HasForeignKey("AsignaturaCLAVE")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Asignatura");
                });

            modelBuilder.Entity("sistemaDual.Models.Alumno_MentorEmpresarial", b =>
                {
                    b.HasOne("sistemaDual.Models.Alumno", "Alumno")
                        .WithMany("Alumno_Mentores")
                        .HasForeignKey("AlumnoCURP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sistemaDual.Models.MentorEmpresarial", "MentorEmpresarial")
                        .WithMany("Mentor_Alumnos")
                        .HasForeignKey("MentorEmpresarialCURP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("MentorEmpresarial");
                });

            modelBuilder.Entity("sistemaDual.Models.Alumno_ProgramaEducativo", b =>
                {
                    b.HasOne("sistemaDual.Models.Alumno", "Alumno")
                        .WithMany()
                        .HasForeignKey("AlumnoCURP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sistemaDual.Models.ProgramaEducativo", "ProgramaEducativo")
                        .WithMany()
                        .HasForeignKey("ProgramaEducativoCLAVE")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("ProgramaEducativo");
                });

            modelBuilder.Entity("sistemaDual.Models.AsesorInstitucional", b =>
                {
                    b.HasOne("sistemaDual.Models.ProgramaEducativo", "ProgramaEducativo")
                        .WithMany("AsesorInstitucionalList")
                        .HasForeignKey("ProgramaEducativoCLAVE")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramaEducativo");
                });

            modelBuilder.Entity("sistemaDual.Models.Asignatura", b =>
                {
                    b.HasOne("sistemaDual.Models.ProgramaEducativo", "ProgramaEducativo")
                        .WithMany("AsignaturaList")
                        .HasForeignKey("ProgramaEducativoCLAVE")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramaEducativo");
                });

            modelBuilder.Entity("sistemaDual.Models.CatalagoProyecto", b =>
                {
                    b.HasOne("sistemaDual.Models.Alumno", "Alumno")
                        .WithMany("CatalagoProyectos")
                        .HasForeignKey("AlumnoCURP");

                    b.HasOne("sistemaDual.Models.AsesorInstitucional", "AsesorInstitucional")
                        .WithMany("CatalagoProyectoList")
                        .HasForeignKey("AsesorInstitucionalCURP");

                    b.HasOne("sistemaDual.Models.Empresa", "Empresa")
                        .WithMany("CatalagoProyectos")
                        .HasForeignKey("EmpresaRFC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sistemaDual.Models.MentorEmpresarial", "MentorEmpresarial")
                        .WithMany("CatalagoProyectoList")
                        .HasForeignKey("MentorEmpresarialCURP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sistemaDual.Models.ProgramaEducativo", "ProgramaEducativo")
                        .WithMany("CatalagoProyectoList")
                        .HasForeignKey("ProgramaEducativoCLAVE")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sistemaDual.Models.ResponsableInstitucional", "ResponsableInstitucional")
                        .WithMany("CatalagoProyectoList")
                        .HasForeignKey("ResponsableInstitucionalCURP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("AsesorInstitucional");

                    b.Navigation("Empresa");

                    b.Navigation("MentorEmpresarial");

                    b.Navigation("ProgramaEducativo");

                    b.Navigation("ResponsableInstitucional");
                });

            modelBuilder.Entity("sistemaDual.Models.Empresa", b =>
                {
                    b.HasOne("sistemaDual.Models.Domicilio", "Domicilio")
                        .WithMany("Empresas")
                        .HasForeignKey("Domicilioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Domicilio");
                });

            modelBuilder.Entity("sistemaDual.Models.MentorAcademico", b =>
                {
                    b.HasOne("sistemaDual.Models.ProgramaEducativo", "ProgramaEducativo")
                        .WithMany("MentorAcademicoList")
                        .HasForeignKey("ProgramaEducativoCLAVE")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramaEducativo");
                });

            modelBuilder.Entity("sistemaDual.Models.MentorEmpresarial", b =>
                {
                    b.HasOne("sistemaDual.Models.Empresa", "Empresa")
                        .WithMany("MentoresEmpresariales")
                        .HasForeignKey("EmpresaRFC");

                    b.HasOne("sistemaDual.Models.ProgramaEducativo", "ProgramaEducativo")
                        .WithMany("MentorEmpresarialList")
                        .HasForeignKey("ProgramaEducativoCLAVE")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("ProgramaEducativo");
                });

            modelBuilder.Entity("sistemaDual.Models.ProgramaEducativo", b =>
                {
                    b.HasOne("sistemaDual.Models.Universidad", "Universidad")
                        .WithMany("ProgramasEducativos")
                        .HasForeignKey("UniversidadCCT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Universidad");
                });

            modelBuilder.Entity("sistemaDual.Models.ResponsableInstitucional", b =>
                {
                    b.HasOne("sistemaDual.Models.Universidad", "Universidad")
                        .WithMany("ResponsablesInstitucionales")
                        .HasForeignKey("UniversidadCCT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Universidad");
                });

            modelBuilder.Entity("sistemaDual.Models.Universidad", b =>
                {
                    b.HasOne("sistemaDual.Models.Domicilio", "Domicilio")
                        .WithMany("Universidades")
                        .HasForeignKey("Domicilioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Domicilio");
                });

            modelBuilder.Entity("sistemaDual.Models.Alumno", b =>
                {
                    b.Navigation("Alumno_Asignaturas");

                    b.Navigation("Alumno_Mentores");

                    b.Navigation("CatalagoProyectos");
                });

            modelBuilder.Entity("sistemaDual.Models.AsesorInstitucional", b =>
                {
                    b.Navigation("CatalagoProyectoList");
                });

            modelBuilder.Entity("sistemaDual.Models.Asignatura", b =>
                {
                    b.Navigation("Alumno_Asignaturas");
                });

            modelBuilder.Entity("sistemaDual.Models.BecaDual", b =>
                {
                    b.Navigation("Alumnos");
                });

            modelBuilder.Entity("sistemaDual.Models.Domicilio", b =>
                {
                    b.Navigation("Alumnos");

                    b.Navigation("Empresas");

                    b.Navigation("Universidades");
                });

            modelBuilder.Entity("sistemaDual.Models.Empresa", b =>
                {
                    b.Navigation("CatalagoProyectos");

                    b.Navigation("MentoresEmpresariales");
                });

            modelBuilder.Entity("sistemaDual.Models.Estatus", b =>
                {
                    b.Navigation("Alumnos");
                });

            modelBuilder.Entity("sistemaDual.Models.MentorEmpresarial", b =>
                {
                    b.Navigation("CatalagoProyectoList");

                    b.Navigation("Mentor_Alumnos");
                });

            modelBuilder.Entity("sistemaDual.Models.ProgramaEducativo", b =>
                {
                    b.Navigation("AsesorInstitucionalList");

                    b.Navigation("AsignaturaList");

                    b.Navigation("CatalagoProyectoList");

                    b.Navigation("MentorAcademicoList");

                    b.Navigation("MentorEmpresarialList");
                });

            modelBuilder.Entity("sistemaDual.Models.ResponsableInstitucional", b =>
                {
                    b.Navigation("CatalagoProyectoList");
                });

            modelBuilder.Entity("sistemaDual.Models.Universidad", b =>
                {
                    b.Navigation("ProgramasEducativos");

                    b.Navigation("ResponsablesInstitucionales");
                });
#pragma warning restore 612, 618
        }
    }
}
