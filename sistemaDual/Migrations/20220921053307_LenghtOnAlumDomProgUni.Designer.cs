// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sistemaDual.Data;

#nullable disable

namespace sistemaDual.Migrations
{
    [DbContext(typeof(ProgramaDualContext))]
    [Migration("20220921053307_LenghtOnAlumDomProgUni")]
    partial class LenghtOnAlumDomProgUni
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-rc.1.22426.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("sistemaDual.Models.AlumnoDual", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ApellidoM")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ApellidoP")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Cuatrimestre")
                        .HasColumnType("int");

                    b.Property<string>("Curp")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<int>("DomicilioID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaContratado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEgreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaReingreso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ProgramaEducativoID")
                        .HasColumnType("int");

                    b.Property<double>("Promedio")
                        .HasColumnType("float");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DomicilioID");

                    b.HasIndex("ProgramaEducativoID");

                    b.ToTable("AlumnoDual");
                });

            modelBuilder.Entity("sistemaDual.Models.Domicilio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Colonia")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Otros")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("Domicilio", (string)null);
                });

            modelBuilder.Entity("sistemaDual.Models.ProgramaEducativo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("UniversidadID")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("ID");

                    b.HasIndex("UniversidadID");

                    b.ToTable("ProgramaEducativo", (string)null);
                });

            modelBuilder.Entity("sistemaDual.Models.Universidad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CCT")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("DomicilioID")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("ID");

                    b.HasIndex("DomicilioID");

                    b.ToTable("Universidad", (string)null);
                });

            modelBuilder.Entity("sistemaDual.Models.AlumnoDual", b =>
                {
                    b.HasOne("sistemaDual.Models.Domicilio", "Domicilio")
                        .WithMany("AlumnosDuales")
                        .HasForeignKey("DomicilioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sistemaDual.Models.ProgramaEducativo", "ProgramaEducativo")
                        .WithMany("AlumnosDuales")
                        .HasForeignKey("ProgramaEducativoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Domicilio");

                    b.Navigation("ProgramaEducativo");
                });

            modelBuilder.Entity("sistemaDual.Models.ProgramaEducativo", b =>
                {
                    b.HasOne("sistemaDual.Models.Universidad", "Universidad")
                        .WithMany("ProgramaEducativos")
                        .HasForeignKey("UniversidadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Universidad");
                });

            modelBuilder.Entity("sistemaDual.Models.Universidad", b =>
                {
                    b.HasOne("sistemaDual.Models.Domicilio", "Domicilio")
                        .WithMany("Universidades")
                        .HasForeignKey("DomicilioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Domicilio");
                });

            modelBuilder.Entity("sistemaDual.Models.Domicilio", b =>
                {
                    b.Navigation("AlumnosDuales");

                    b.Navigation("Universidades");
                });

            modelBuilder.Entity("sistemaDual.Models.ProgramaEducativo", b =>
                {
                    b.Navigation("AlumnosDuales");
                });

            modelBuilder.Entity("sistemaDual.Models.Universidad", b =>
                {
                    b.Navigation("ProgramaEducativos");
                });
#pragma warning restore 612, 618
        }
    }
}
