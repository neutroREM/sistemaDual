// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sistemaDual.Data;

#nullable disable

namespace sistemaDual.Migrations
{
    [DbContext(typeof(ProgramaDualContext))]
    [Migration("20221116084304_InitialDB")]
    partial class InitialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-rc.1.22426.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("sistemaDual.Models.AlumnoAsignatura", b =>
                {
                    b.Property<int>("AlumnoDualID")
                        .HasColumnType("int");

                    b.Property<int>("AsignaturaID")
                        .HasColumnType("int");

                    b.Property<double?>("AsignaturaCalificacion")
                        .HasColumnType("float");

                    b.HasKey("AlumnoDualID", "AsignaturaID");

                    b.HasIndex("AsignaturaID");

                    b.ToTable("AlumnoAsignaturas");
                });

            modelBuilder.Entity("sistemaDual.Models.AlumnoDual", b =>
                {
                    b.Property<int>("AlumnoDualID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlumnoDualID"));

                    b.Property<string>("ApellidoM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApellidoP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BecaDualID")
                        .HasColumnType("int");

                    b.Property<string>("CURP")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("Clave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cuatrimestre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DomicilioID")
                        .HasColumnType("int");

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit");

                    b.Property<int?>("EstatusID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCambios")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Matricula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgramaEducativoID")
                        .HasColumnType("int");

                    b.Property<double?>("Promedio")
                        .HasColumnType("float");

                    b.Property<int?>("RolID")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AlumnoDualID");

                    b.HasIndex("BecaDualID");

                    b.HasIndex("DomicilioID");

                    b.HasIndex("EstatusID");

                    b.HasIndex("ProgramaEducativoID");

                    b.HasIndex("RolID");

                    b.ToTable("AlumnoDual", (string)null);
                });

            modelBuilder.Entity("sistemaDual.Models.AlumnoMentor", b =>
                {
                    b.Property<int>("AlumnoDualID")
                        .HasColumnType("int");

                    b.Property<int>("MentorEmpresarialID")
                        .HasColumnType("int");

                    b.HasKey("AlumnoDualID", "MentorEmpresarialID");

                    b.HasIndex("MentorEmpresarialID");

                    b.ToTable("AlumnosMentores");
                });

            modelBuilder.Entity("sistemaDual.Models.AsesorInstitucional", b =>
                {
                    b.Property<int>("AsesorInstitucionalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AsesorInstitucionalID"));

                    b.Property<string>("ApellidoM")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ApellidoP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CURP")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreA")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ProgramaEducativoID")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AsesorInstitucionalID");

                    b.HasIndex("ProgramaEducativoID");

                    b.ToTable("AsesorInstitucional", (string)null);
                });

            modelBuilder.Entity("sistemaDual.Models.Asignatura", b =>
                {
                    b.Property<int>("AsignaturaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AsignaturaID"));

                    b.Property<string>("Actividad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Competencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCambios")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreAsignatura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Periodo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AsignaturaID");

                    b.ToTable("Asignatura", (string)null);
                });

            modelBuilder.Entity("sistemaDual.Models.BecaDual", b =>
                {
                    b.Property<int>("BecaDualID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BecaDualID"));

                    b.Property<string>("Duracion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fuente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Periocidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoBeca")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BecaDualID");

                    b.ToTable("BecaDual", (string)null);
                });

            modelBuilder.Entity("sistemaDual.Models.CatalagoProyecto", b =>
                {
                    b.Property<int>("CatalagoProyectoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatalagoProyectoID"));

                    b.Property<int?>("AlumnoDualID")
                        .HasColumnType("int");

                    b.Property<string>("AreaConocimiento")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<string>("Etapa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("FechaCambioEstatus")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaTermino")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreProyecto")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("NumHoras")
                        .HasColumnType("int");

                    b.Property<string>("NumeroProyecto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CatalagoProyectoID");

                    b.HasIndex("AlumnoDualID");

                    b.HasIndex("EmpresaID");

                    b.ToTable("CatalagoProyecto", (string)null);
                });

            modelBuilder.Entity("sistemaDual.Models.Configuracion", b =>
                {
                    b.Property<int>("ConfiguracionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConfiguracionID"));

                    b.Property<string>("Propiedad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recurso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConfiguracionID");

                    b.ToTable("Configuracion", (string)null);
                });

            modelBuilder.Entity("sistemaDual.Models.Domicilio", b =>
                {
                    b.Property<int>("DomicilioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DomicilioID"));

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Colonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Municipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Otros")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DomicilioID");

                    b.ToTable("Domicilio", (string)null);
                });

            modelBuilder.Entity("sistemaDual.Models.Empresa", b =>
                {
                    b.Property<int>("EmpresaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpresaID"));

                    b.Property<string>("CorreoR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DomicilioID")
                        .HasColumnType("int");

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCambio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RFC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepresentanteL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SectorS")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpresaID");

                    b.HasIndex("DomicilioID");

                    b.ToTable("Empresa", (string)null);
                });

            modelBuilder.Entity("sistemaDual.Models.Estatus", b =>
                {
                    b.Property<int>("EstatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstatusID"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstatusID");

                    b.ToTable("Estatus");
                });

            modelBuilder.Entity("sistemaDual.Models.MentorAcademico", b =>
                {
                    b.Property<int>("MentorAcademicoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MentorAcademicoID"));

                    b.Property<string>("ApellidoM")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ApellidoP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CURP")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ProgramaEducativoID")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MentorAcademicoID");

                    b.HasIndex("ProgramaEducativoID");

                    b.ToTable("MentorAcademico", (string)null);
                });

            modelBuilder.Entity("sistemaDual.Models.MentorEmpresarial", b =>
                {
                    b.Property<int>("MentorEmpresarialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MentorEmpresarialID"));

                    b.Property<string>("ApellidoM")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ApellidoP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CURP")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("Cargo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Clave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MentorEmpresarialID");

                    b.HasIndex("EmpresaID");

                    b.ToTable("MentorEmpresarial", (string)null);
                });

            modelBuilder.Entity("sistemaDual.Models.NumeroCorrelativo", b =>
                {
                    b.Property<int>("NumeroCorrelativoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumeroCorrelativoID"));

                    b.Property<int?>("CantidadDigitos")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UltimoNumero")
                        .HasColumnType("int");

                    b.HasKey("NumeroCorrelativoID");

                    b.ToTable("NumeroCorrelativo", (string)null);
                });

            modelBuilder.Entity("sistemaDual.Models.ProgramaEducativo", b =>
                {
                    b.Property<int>("ProgramaEducativoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramaEducativoID"));

                    b.Property<string>("NombreP")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("UniversidadID")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("ProgramaEducativoID");

                    b.HasIndex("UniversidadID");

                    b.ToTable("ProgramaEducativo", (string)null);
                });

            modelBuilder.Entity("sistemaDual.Models.ResponsableInstitucional", b =>
                {
                    b.Property<int>("ResponsableInstitucionalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResponsableInstitucionalID"));

                    b.Property<string>("ApellidoM")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ApellidoP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CURP")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("Cargo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreR")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UniversidadID")
                        .HasColumnType("int");

                    b.HasKey("ResponsableInstitucionalID");

                    b.HasIndex("UniversidadID");

                    b.ToTable("ResponsableInstitucional", (string)null);
                });

            modelBuilder.Entity("sistemaDual.Models.Rol", b =>
                {
                    b.Property<int>("RolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolID"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.HasKey("RolID");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("sistemaDual.Models.Universidad", b =>
                {
                    b.Property<int>("UniversidadID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UniversidadID"));

                    b.Property<string>("CCT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DomicilioID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCambio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreU")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UniversidadID");

                    b.HasIndex("DomicilioID");

                    b.ToTable("Universidad", (string)null);
                });

            modelBuilder.Entity("sistemaDual.Models.AlumnoAsignatura", b =>
                {
                    b.HasOne("sistemaDual.Models.AlumnoDual", "AlumnoDual")
                        .WithMany("AlumnoAsignaturas")
                        .HasForeignKey("AlumnoDualID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sistemaDual.Models.Asignatura", "Asignatura")
                        .WithMany("AlumnoAsignaturas")
                        .HasForeignKey("AsignaturaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlumnoDual");

                    b.Navigation("Asignatura");
                });

            modelBuilder.Entity("sistemaDual.Models.AlumnoDual", b =>
                {
                    b.HasOne("sistemaDual.Models.BecaDual", "BecaDual")
                        .WithMany("AlumnosDuales")
                        .HasForeignKey("BecaDualID");

                    b.HasOne("sistemaDual.Models.Domicilio", "Domicilio")
                        .WithMany("AlumnosDual")
                        .HasForeignKey("DomicilioID");

                    b.HasOne("sistemaDual.Models.Estatus", "Estatus")
                        .WithMany("AlumnosDuales")
                        .HasForeignKey("EstatusID");

                    b.HasOne("sistemaDual.Models.ProgramaEducativo", "ProgramaEducativo")
                        .WithMany("AlumnosDuales")
                        .HasForeignKey("ProgramaEducativoID");

                    b.HasOne("sistemaDual.Models.Rol", "Rol")
                        .WithMany("AlumnosDuales")
                        .HasForeignKey("RolID");

                    b.Navigation("BecaDual");

                    b.Navigation("Domicilio");

                    b.Navigation("Estatus");

                    b.Navigation("ProgramaEducativo");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("sistemaDual.Models.AlumnoMentor", b =>
                {
                    b.HasOne("sistemaDual.Models.AlumnoDual", "AlumnoDual")
                        .WithMany("AlumnoMentores")
                        .HasForeignKey("AlumnoDualID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sistemaDual.Models.MentorEmpresarial", "MentorEmpresarial")
                        .WithMany("AlumnosMentores")
                        .HasForeignKey("MentorEmpresarialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlumnoDual");

                    b.Navigation("MentorEmpresarial");
                });

            modelBuilder.Entity("sistemaDual.Models.AsesorInstitucional", b =>
                {
                    b.HasOne("sistemaDual.Models.ProgramaEducativo", "ProgramaEducativo")
                        .WithMany("AsesoresInstitucionales")
                        .HasForeignKey("ProgramaEducativoID");

                    b.Navigation("ProgramaEducativo");
                });

            modelBuilder.Entity("sistemaDual.Models.CatalagoProyecto", b =>
                {
                    b.HasOne("sistemaDual.Models.AlumnoDual", "AlumnoDual")
                        .WithMany("CatalagoProyectos")
                        .HasForeignKey("AlumnoDualID");

                    b.HasOne("sistemaDual.Models.Empresa", "Empresa")
                        .WithMany("CatalagoProyectos")
                        .HasForeignKey("EmpresaID");

                    b.Navigation("AlumnoDual");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("sistemaDual.Models.Empresa", b =>
                {
                    b.HasOne("sistemaDual.Models.Domicilio", null)
                        .WithMany("Empresas")
                        .HasForeignKey("DomicilioID");
                });

            modelBuilder.Entity("sistemaDual.Models.MentorAcademico", b =>
                {
                    b.HasOne("sistemaDual.Models.ProgramaEducativo", "ProgramaEducativo")
                        .WithMany("MentoresAcademicos")
                        .HasForeignKey("ProgramaEducativoID");

                    b.Navigation("ProgramaEducativo");
                });

            modelBuilder.Entity("sistemaDual.Models.MentorEmpresarial", b =>
                {
                    b.HasOne("sistemaDual.Models.Empresa", "Empresa")
                        .WithMany("MentoresEmpresariales")
                        .HasForeignKey("EmpresaID");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("sistemaDual.Models.ProgramaEducativo", b =>
                {
                    b.HasOne("sistemaDual.Models.Universidad", "Universidad")
                        .WithMany("ProgramaEducativos")
                        .HasForeignKey("UniversidadID");

                    b.Navigation("Universidad");
                });

            modelBuilder.Entity("sistemaDual.Models.ResponsableInstitucional", b =>
                {
                    b.HasOne("sistemaDual.Models.Universidad", "Universidad")
                        .WithMany("ResponsablesInstitucionales")
                        .HasForeignKey("UniversidadID");

                    b.Navigation("Universidad");
                });

            modelBuilder.Entity("sistemaDual.Models.Universidad", b =>
                {
                    b.HasOne("sistemaDual.Models.Domicilio", "Domicilio")
                        .WithMany("Universidades")
                        .HasForeignKey("DomicilioID");

                    b.Navigation("Domicilio");
                });

            modelBuilder.Entity("sistemaDual.Models.AlumnoDual", b =>
                {
                    b.Navigation("AlumnoAsignaturas");

                    b.Navigation("AlumnoMentores");

                    b.Navigation("CatalagoProyectos");
                });

            modelBuilder.Entity("sistemaDual.Models.Asignatura", b =>
                {
                    b.Navigation("AlumnoAsignaturas");
                });

            modelBuilder.Entity("sistemaDual.Models.BecaDual", b =>
                {
                    b.Navigation("AlumnosDuales");
                });

            modelBuilder.Entity("sistemaDual.Models.Domicilio", b =>
                {
                    b.Navigation("AlumnosDual");

                    b.Navigation("Empresas");

                    b.Navigation("Universidades");
                });

            modelBuilder.Entity("sistemaDual.Models.Empresa", b =>
                {
                    b.Navigation("CatalagoProyectos");

                    b.Navigation("MentoresEmpresariales");
                });

            modelBuilder.Entity("sistemaDual.Models.Estatus", b =>
                {
                    b.Navigation("AlumnosDuales");
                });

            modelBuilder.Entity("sistemaDual.Models.MentorEmpresarial", b =>
                {
                    b.Navigation("AlumnosMentores");
                });

            modelBuilder.Entity("sistemaDual.Models.ProgramaEducativo", b =>
                {
                    b.Navigation("AlumnosDuales");

                    b.Navigation("AsesoresInstitucionales");

                    b.Navigation("MentoresAcademicos");
                });

            modelBuilder.Entity("sistemaDual.Models.Rol", b =>
                {
                    b.Navigation("AlumnosDuales");
                });

            modelBuilder.Entity("sistemaDual.Models.Universidad", b =>
                {
                    b.Navigation("ProgramaEducativos");

                    b.Navigation("ResponsablesInstitucionales");
                });
#pragma warning restore 612, 618
        }
    }
}
